name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Temporarily disabled due to environment differences
      # - name: Check formatting  
      #   run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

  bump-version:
    needs: quality-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "Setting Cargo.toml version to $VERSION"
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml

      - name: Commit version bump
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add Cargo.toml
          git commit -m "Bump version to $VERSION from tag" || echo "No changes to commit"
          git push



  build-arm64:
    runs-on: macos-14
    needs: bump-version
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - uses: dtolnay/rust-toolchain@stable
      - name: Build ARM64 binary
        run: |
          cargo build --release
          tar -czvf ytm-macos-arm64.tar.gz -C target/release ytm
      - name: Upload ARM64 binary
        uses: softprops/action-gh-release@v2
        with:
          files: ytm-macos-arm64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



  build-x86_64:
    runs-on: macos-13
    needs: bump-version
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - uses: dtolnay/rust-toolchain@stable
      - name: Build x86_64 binary
        run: |
          cargo build --release
          tar -czvf ytm-macos-x86_64.tar.gz -C target/release ytm
      - name: Upload x86_64 binary
        uses: softprops/action-gh-release@v2
        with:
          files: ytm-macos-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




  build-linux-x86_64:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - uses: dtolnay/rust-toolchain@stable

      - name: Build Linux x86_64 binary
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          tar -czvf ytm-linux-x86_64.tar.gz -C target/x86_64-unknown-linux-gnu/release ytm

      - name: Upload Linux x86_64 binary
        uses: softprops/action-gh-release@v2
        with:
          files: ytm-linux-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      

  # Temporarily disabled - causing 404 errors with release asset downloads
  # This job updates the Homebrew formula but can be done manually if needed
  # update-formula:
  #   runs-on: ubuntu-latest  
  #   needs: [build-arm64, build-x86_64, build-linux-x86_64]
  #   ... (rest of job commented out)
